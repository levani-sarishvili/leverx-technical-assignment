<mvc:View
  controllerName="levani.sarishvili.controller.ProductList"
  displayBlock="true"
  xmlns="sap.m"
  xmlns:mvc="sap.ui.core.mvc"
  xmlns:f="sap.f"
  xmlns:fb="sap.ui.comp.filterbar"
  xmlns:t="sap.ui.table"
  xmlns:rowmode="sap.ui.table.rowmodes"
  xmlns:core="sap.ui.core">

  <f:DynamicPage
    toggleHeaderOnTitleClick="true"
    preserveHeaderStateOnScroll="false"
    class="sapUiNoContentPadding">

    <f:title>
      <f:DynamicPageTitle>
        <f:heading>
          <Title text="{i18n>pageTitleProductList}" level="H1" />
        </f:heading>

        <f:expandedContent>
          <Label id="expandedLabel" text="No filters active" />
        </f:expandedContent>
        <f:snappedContent>
          <Label id="snappedLabel" text="No filters active" />
        </f:snappedContent>

      </f:DynamicPageTitle>
    </f:title>

    <f:header>
      <f:DynamicPageHeader pinnable="true">
        <fb:FilterBar
          id="filterbar"
          useToolbar="false"
          search=".onSearch"
          filterChange=".onFilterChange"
        >
          <fb:filterGroupItems>
            <fb:FilterGroupItem name="Search" groupName="Group1"
              visibleInFilterBar="true">
              <fb:control>
                <SearchField
                  placeholder="{i18n>searchFilterPlaceholder}"
                  search="onProductSearchPress"
                />
              </fb:control>
            </fb:FilterGroupItem>

            <fb:FilterGroupItem name="Category" label="{i18n>categoryFilterLabel}"
              groupName="Group1"
              visibleInFilterBar="true">
              <fb:control>
                <ComboBox
                  items="{
                    path: '/ProductCategories',
                    sorter: { path: 'Name' }
                  }">
                  <core:Item key="{Key}" text="{Name}" />
                </ComboBox>
              </fb:control>
            </fb:FilterGroupItem>

            <fb:FilterGroupItem name="Brand" label="{i18n>brandFilterLabel}"
              groupName="Group1"
              visibleInFilterBar="true">
              <fb:control>
                <MultiComboBox
                  selectionChange="handleSelectionChange"
                  selectionFinish="handleSelectionFinish"
                  items="{
                    path: '/ProductBrands',
                    sorter: { path: 'Name' }
                  }">
                  <core:Item key="{Key}" text="{Name}" />
                </MultiComboBox>
              </fb:control>
            </fb:FilterGroupItem>

            <fb:FilterGroupItem name="ReleaseDate" label="{i18n>releaseDateFilterLabel}"
              groupName="Group1"
              visibleInFilterBar="true">
              <fb:control>
                <DatePicker
                  placeholder="{i18n>releaseDateFilterPlaceholder}"
                  displayFormat="yyyy-MM-dd"
                  valueFormat="yyyy-MM-dd"
                  value="{Products>ReleaseDate}"
                />
              </fb:control>
            </fb:FilterGroupItem>
          </fb:filterGroupItems>
        </fb:FilterBar>
      </f:DynamicPageHeader>
    </f:header>

    <f:content>
      <t:Table
        class="sapUiResponsiveMargin"
        rows="{/Products}"
        rowSelectionChange="onRowSelectionChange"
        ariaLabelledBy="title"
        id="productTable"
        selectionMode="MultiToggle"
        rowActionCount="1"
        selectionBehavior="Row"
        alternateRowColors="true"
        sort=".onTableSort"
      >
        <t:rowMode>
          <rowmode:Auto
            minRowCount="{= ${/Products} ? ${/Products}.length : 0 }" />
        </t:rowMode>

        <t:noData>
          <IllustratedMessage enableVerticalResponsiveness="true"
            illustrationType="sapIllus-NoData">
          </IllustratedMessage>
        </t:noData>

        <t:extension>
          <OverflowToolbar style="Standard">
            <Title id="productTableTitle"
              text="{
                  parts: [
                    { path: 'i18n>productTableTitle' },
                    { path: '/Products' }
                  ],
                  formatter: '.formatter.formatTableTitle'
            }" />
            <ToolbarSpacer />
            <Button
              text="{i18n>createButtonText}"
              type="Transparent"
              press=".onCreateProductPress" />
            <Button
              id="deleteProductButton"
              text="{i18n>deleteButtonText}"
              type="Transparent"
              enabled="{= ${selectionModel>/selectedProductIds}.length > 0 }"
              press=".onDeleteProductPress" />
          </OverflowToolbar>
        </t:extension>

        <t:columns>
          <!-- Product name -->
          <t:Column
            hAlign="Begin"
            sortProperty="Name"
            width="20%"
          >
            <Label text="{i18n>productTableNameColumn}" />
            <t:template>
              <Text text="{Name}" />
            </t:template>
          </t:Column>

          <!-- Price -->
          <t:Column
            hAlign="End"
            sortProperty="Price"
            width="10%"
          >
            <Label text="{i18n>productTablePriceColumn}" />
            <t:template>
              <ObjectNumber
                number="{path: 'Price'}"
                unit="USD"
                emphasized="false"
                textAlign="End"
              />
            </t:template>
          </t:Column>

          <!-- Category -->
          <t:Column
            hAlign="Begin"
            sortProperty="Category"
            width="15%"
          >
            <Label text="{i18n>productTableCategoryColumn}" />
            <t:template>
              <Text text="{Category}" />
            </t:template>
          </t:Column>

          <!-- Brand -->
          <t:Column
            hAlign="Begin"
            sortProperty="Brand"
            width="10%"
          >
            <Label text="{i18n>productTableBrandColumn}" />
            <t:template>
              <Text text="{Brand}" />
            </t:template>
          </t:Column>

          <!-- SupplierName -->
          <t:Column
            hAlign="Begin"
            sortProperty="SupplierName"
            width="20%"
          >
            <Label text="{i18n>productTableSupplierNameColumn}" />
            <t:template>
              <Text text="{SupplierName}" />
            </t:template>
          </t:Column>

          <!-- ReleaseDate -->
          <t:Column
            hAlign="End"
            sortProperty="ReleaseDate"
            width="10%"
          >
            <Label text="{i18n>productTableReleaseDateColumn}" />
            <t:template>
              <Text text="{path: 'ReleaseDate', formatter: '.formatter.formatDate'}" />
            </t:template>
          </t:Column>

          <!-- StockStatus -->
          <t:Column
            hAlign="Begin"
            sortProperty="StockStatus"
            width="15%"
          >
            <Label text="{i18n>productTableStockStatusColumn}" />
            <t:template>
              <ObjectStatus text="{StockStatus}"
                state="{path: 'StockStatus', formatter: '.formatter.formatStockStatus'}"
              />
            </t:template>
          </t:Column>

          <!-- Rating -->
          <t:Column
            hAlign="Center"
            sortProperty="Rating"
            width="15%"
          >
            <Label text="{i18n>productTableRatingColumn}" />
            <t:template>
              <RatingIndicator
                id="RI_display_only"
                iconSize="0.8rem"
                maxValue="5"
                class="sapUiSmallMarginBottom"
                value="{Rating}"
                displayOnly="true" />
            </t:template>
          </t:Column>
        </t:columns>

        <!-- Row Actions -->
        <t:rowActionTemplate>
          <t:RowAction>
            <t:RowActionItem
              icon="sap-icon://feeder-arrow"
              type="Navigation"
              press=".onProductPress" />
          </t:RowAction>
        </t:rowActionTemplate>
      </t:Table>
    </f:content>
  </f:DynamicPage>
</mvc:View>