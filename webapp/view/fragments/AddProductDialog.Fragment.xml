<core:FragmentDefinition
  xmlns="sap.m"
  xmlns:f="sap.ui.layout.form"
  xmlns:core="sap.ui.core">
  <Dialog
    id="createProductDialog"
    title="{i18n>productDialogTitle}"
    resizable="true"
    contentWidth="28rem"
  >
    <f:SimpleForm
      id="productDialogForm"
      layout="ResponsiveGridLayout"
      editable="true"
      labelSpanL="4"
      labelSpanM="12"
      columnsL="2"
      columnsM="1"
    >
      <f:content>
        <!-- Name -->
        <Label text="{i18n>productNameLabel}" labelFor="name" />
        <Input
          id="name"
          value="{
            path: 'productFormModel>Name',
            type: 'sap.ui.model.type.String',
            constraints: {
              minLength: 3,
              maxLength: 100,
              required: true
             } 
            }"
          valueState="{= ${productFormValidationModel>/Name} ? 'None' : 'Error'}"
          placeholder="{i18n>productNameInputPlaceholder}"
          type="Text"
          fieldGroupIds="productFormGroup"
          required="true" />

        <!-- Price -->
        <Label text="{i18n>productPriceLabel}" labelFor="price" />
        <Input
          id="price"
          value="{
            path: 'productFormModel>Price',
            type: 'sap.ui.model.type.Integer',
            constraints: {
              minimum: 1,
              maximum: 100000,
              required: true
              }
            }"
          valueState="{= ${productFormValidationModel>/Price} ? 'None' : 'Error'}"
          placeholder="{i18n>productPriceInputPlaceholder}"
          fieldGroupIds="productFormGroup"
          type="Number"
          required="true" />

        <!-- Category -->
        <Label text="{i18n>productCategoryLabel}" labelFor="category" />
        <Select
          width="100%"
          id="category"
          forceSelection="false"
          required="true"
          fieldGroupIds="productFormGroup"
          selectedKey="{
            path: 'productFormModel>Category',
            type: 'sap.ui.model.type.String',
            constraints: {
              required: true
             } 
            }"
          valueState="{= ${productFormValidationModel>/Category} ? 'None' : 'Error'}"
          items="{
							path: '/ProductCategories',
							sorter: { path: 'Name' }
						}">
          <core:Item key="{Key}" text="{Name}" />
        </Select>

        <!-- StockStatus -->
        <Label text="{i18n>productStockStatusLabel}" labelFor="stockStatus" />
        <Select
          width="100%"
          id="stockStatus"
          forceSelection="false"
          required="true"
          fieldGroupIds="productFormGroup"
          selectedKey="{
            path: 'productFormModel>StockStatus',
            type: 'sap.ui.model.type.String',
            constraints: {
              required: true
             } 
            }"
          valueState="{= ${productFormValidationModel>/StockStatus} ? 'None' : 'Error'}"
          items="{
							path: '/ProductStockStatuses',
							sorter: { path: 'Name' }
						}">
          <core:Item key="{Key}" text="{Name}" />
        </Select>

        <!-- Brand -->
        <Label text="{i18n>productBrandLabel}" labelFor="brand" />
        <Select
          id="brand"
          width="100%"
          forceSelection="false"
          required="true"
          fieldGroupIds="productFormGroup"
          valueState="{= ${productFormValidationModel>/Brand} ? 'None' : 'Error'}"
          selectedKey="{
            path: 'productFormModel>Brand',
            type: 'sap.ui.model.type.String',
            constraints: {
              required: true
             } 
            }"
          items="{
							path: '/ProductBrands',
							sorter: { path: 'Name' }
						}">
          <core:Item key="{Key}" text="{Name}" />
        </Select>

        <!-- SupplierName -->
        <Label text="{i18n>productSupplierLabel}" labelFor="supplierName" />
        <Input
          id="supplierName"
          fieldGroupIds="productFormGroup"
          valueState="{= ${productFormValidationModel>/SupplierName} ? 'None' : 'Error'}"
          value="{
            path: 'productFormModel>SupplierName',
            type: 'sap.ui.model.type.String',
            constraints: {
              minLength: 3,
              maxLength: 100,
              required: true
             } 
            }"
          placeholder="{i18n>productSupplierInputPlaceholder}"
          type="Text"
          required="true" />

        <!-- ReleaseDate -->
        <Label text="{i18n>productReleaseDateLabel}" labelFor="DP1" />
        <DatePicker
          id="DP1"
          placeholder="{i18n>productReleaseDateInputPlaceholder}"
          displayFormat="dd/MM/yyyy"
          valueState="{= ${productFormValidationModel>/ReleaseDate} ? 'None' : 'Error'}"
          valueFormat="yyyy-MM-dd"
          value="{
            path: 'productFormModel>ReleaseDate',
            type: 'sap.ui.model.type.Date',
            formatOptions: {
              pattern: 'yyyy-MM-dd'
            }
          }"
          fieldGroupIds="productFormGroup"
          required="true" />

        <!-- Rating -->
        <Label text="{i18n>productRatingLabel}" labelFor="rating" />
        <Input
          id="rating"
          value="{
            path: 'productFormModel>Rating', 
            type: 'sap.ui.model.type.Float', 
            constraints: { 
              minimum: 1, 
              maximum: 5,
              required: true 
              }
            }"
          valueState="{= ${productFormValidationModel>/Rating} ? 'None' : 'Error'}"
          placeholder="{i18n>productRatingInputPlaceholder}"
          type="Number"
          fieldGroupIds="productFormGroup"
          required="true" />
      </f:content>
    </f:SimpleForm>

    <buttons>
      <Button
        type="Accept"
        text="{i18n>createButtonText}"
        press="onProductCreatePress" />
      <Button
        type="Reject"
        text="{i18n>cancelButtonText}"
        press="onProductCancelPress" />
    </buttons>
  </Dialog>
</core:FragmentDefinition>